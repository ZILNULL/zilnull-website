---
import { getEntry } from "astro:content";

export const prerender = true;

export async function getStaticPaths() {
  const entries = import.meta.glob("../../../content/blogs/*.md");
  return Object.keys(entries).map((p) => ({
    params: { slug: p.split("/").pop()?.replace(".md", "") },
  }));
}

const { slug } = Astro.params;
const entry = await getEntry("blogs", slug!);
if (!entry) throw new Error("Not found");
const { Content } = await entry.render();
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="/style/blog.css" />
  </head>
  <body>
    <article class="article">
      <h1>{entry.data.title}</h1>
      <Content />
    </article>
  </body>
</html>

<script type="module">
  class XCounter extends HTMLElement {
    connectedCallback() {
      const start = Number(this.getAttribute('start') || 0);
      let n = start;
      this.attachShadow({ mode: 'open' });
      const root = this.shadowRoot;
      const wrap = document.createElement('div');
      wrap.style.cssText = "display:inline-flex;gap:.4em;align-items:center;border:1px solid var(--border);border-radius:6px;padding:.25em .5em;background:var(--code-bg)";
      const num = document.createElement('span');
      num.textContent = String(n);
      const btn = document.createElement('button');
      btn.textContent = "+";
      btn.style.cssText = "cursor:pointer;";
      btn.addEventListener('click', () => { n += 1; num.textContent = String(n); });
      wrap.append(num, btn);
      root.appendChild(wrap);
    }
  }
  customElements.define('x-counter', XCounter);
</script>
